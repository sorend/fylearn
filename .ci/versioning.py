#!/usr/bin/env python3

import versiontag

template = r"""# file generated by .ci/versioning.py
# don't change, don't track in version control
TYPE_CHECKING = False
if TYPE_CHECKING:
    from typing import Tuple, Union
    VERSION_TUPLE = Tuple[Union[int, str], ...]
else:
    VERSION_TUPLE = object

version: str
__version__: str
__version_tuple__: VERSION_TUPLE
version_tuple: VERSION_TUPLE

__version__ = version = '%s'
__version_tuple__ = version_tuple = %s
"""

def num_or_str(x):
    try:
        return int(x)
    except:
        return x

version = versiontag.get_version(pypi=True).strip()
version_tuple = str(tuple([num_or_str(x) for x in version.split(".")]))

with open("fylearn/_version.py", "w") as f:
    f.write(template % (version, version_tuple))

print(f"Generated version {version} tuple {version_tuple}")
